Zoekterm: installation software
	Software installation and condition data distribution via CernVM File System in ATLAS
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=viewOnlineTab&ct=display&fn=search&doc=TN_iop10.1088%2f1742-6596%2f396%2f3%2f032030&indx=3&recIds=TN_iop10.1088%2f1742-6596%2f396%2f3%2f032030&recIdxs=2&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?gathStatTab=true&dscnt=0&mode=Basic&vid=KULeuven_ODISEE&rfnGrp=1&tab=all_content_tab&dstmp=1475323961072&frbg=&rfnGrpCounter=1&frbrVersion=3&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&fctV=articles&srt=rank&fctN=facet_rtype&dum=true&vl(freeText0)=installation%20software&fromTabHeaderButtonPopout=true
		http://iopscience.iop.org.kuleuven.ezproxy.kuleuven.be/article/10.1088/1742-6596/396/3/032030/pdf
		
		CernVM-FS is een project in Cern met als bedoeling het delen van data over een gedistribueerde HTTP-filesystem.
		Alle bestanden staan geinstaleerd op een centrale repository. Mocht een ander systeem de bestanden nodig hebben, dan worden deze gedeeld.
		Het systeem wordt onder andere geruikt bij HEP (high energy particle) experimenten voor het distribueren van on-demand software voor data analyse, ...
		Door de manier van opslag is het niet mogelijk om twee dezelfde bestanden te hebben, ...
		Het systeem maakt gebruik van de installatie DB van het ATLAS installation systeem.
		
	Package Management Systems
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=detailsTab&ct=display&fn=search&doc=TN_ieee10.1109%2fMS.2012.38&indx=4&recIds=TN_ieee10.1109%2fMS.2012.38&recIdxs=3&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?gathStatTab=true&dscnt=0&mode=Basic&vid=KULeuven_ODISEE&rfnGrp=1&tab=all_content_tab&dstmp=1475324125836&frbg=&rfnGrpCounter=1&frbrVersion=6&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&fctV=articles&srt=rank&fctN=facet_rtype&dum=true&vl(freeText0)=installation%20software&fromTabHeaderButtonPopout=true
		http://ieeexplore.ieee.org.kuleuven.ezproxy.kuleuven.be/stamp/stamp.jsp?arnumber=6155145
		
		Software installatie en onderhoud wordt vergemakkelijkt door het standariseren en organiseren van de productie en consumptie van software.
		Systeem bestaat uit: repositories met alle packages, installatie en management software.
		Per host wordt er data bijgehouden over de geinstaleerde pakketten.
		De pakketten bevatten vaak meta-data met daarin de versie, ... .
		De manager zorgt er dan voor dat de nodige dependencies en dergelijke worden geinstalleerd. Vaak bevatten ze ook de logica om de pakketten te upgraden en verwijderen.
		Voordeel voor developers is dat ze heel gemakkelijk een omgeving kunne opzetten door enkel de nodige packages op te lijsten.
		Nadeel is dat het installeren van software die niet in een package zit, moeilijk kan zijn.
		Als je een package hebt die goed werkt dan is het wel heel goed en gemakkelijk te gebruiken.
		Gebruikers moeten niet weten wat de achterliggende handelingen zijn wat het gemakkelijker maakt. 
		
	Verifying installation environments
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=detailsTab&ct=display&fn=search&doc=TN_proquest202690702&indx=15&recIds=TN_proquest202690702&recIdxs=14&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?gathStatTab=true&dscnt=0&mode=Basic&vid=KULeuven_ODISEE&rfnGrp=2&rfnGrp=1&tab=all_content_tab&dstmp=1475324695152&frbg=&rfnGrpCounter=2&frbrVersion=5&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&fctV=%5B2000%2BTO%2B2016%5D&fctV=articles&srt=rank&fctN=facet_searchcreationdate&fctN=facet_rtype&dum=true&vl(freeText0)=installation%20software&fromTabHeaderButtonPopout=true
		http://search.proquest.com.kuleuven.ezproxy.kuleuven.be/docview/202690702?accountid=17215&rfr_id=info%3Axri%2Fsid%3Aprimo
		
		Het doel van de schrijver van het artikel was het creeeren van een applicatie waarmee het mogelijk is om de installatie omgeving te controleren.
		Door software die al geinstalleerd is op een systeem kan het zijn dat verschillende DLLs niet aanwezig zijn.
		Verder kan het zijn, dat door het installeren van nieuwe software de oude niet meer werkt.
		In het artikel beschrijft de schrijver zijn systeem waarmee het mogelijk wordt om het verificatie proces af te scheiden van het installatie proces.
		Hierdoor wordt zijn installer niet geclutterd met extra software en bezit de gebruiker een tool waarmee die kan kijken of alles naar behoren werkt.
		Vervolgens legt de schrijver uit hoe hij te werk is gegaan voor het maken van zijn systeem.
		De schrijver concludeert met de drie grote voordelen van het opsplisten van de twee systemen:
		-easy environment verification
		-installation program minder geclutterd
		-verfication tool na het installeren
		
		Dit is miss wel interessant want hij legt zijn structuur uit.
		
	The atlas software installation system for lcg/egee
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=detailsTab&ct=display&fn=search&doc=TN_iop10.1088%2f1742-6596%2f119%2f5%2f052013&indx=28&recIds=TN_iop10.1088%2f1742-6596%2f119%2f5%2f052013&recIdxs=7&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?gathStatTab=true&dscnt=0&mode=Basic&vid=KULeuven_ODISEE&rfnGrp=2&rfnGrp=1&tab=all_content_tab&dstmp=1475325015942&frbg=&rfnGrpCounter=2&frbrVersion=2&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&fctV=%5B2000%2BTO%2B2016%5D&fctV=articles&srt=rank&fctN=facet_searchcreationdate&fctN=facet_rtype&dum=true&vl(freeText0)=installation%20software&fromTabHeaderButtonPopout=true
		http://iopscience.iop.org.kuleuven.ezproxy.kuleuven.be/article/10.1088/1742-6596/119/5/052013/pdf
		
		Het LHC experiment in Cern heeft nood aan een systeem voor het automatisch installeren van software. Dit is nodig voor de grote hoeveelheid aan resources die aanwezig zijn in GRID aan te kunnen.
		Met behulp van Light Job Submission Framework for installation, was het mogelijk om zo'n systeem uit te bouwen.
		Het framework is een dunne laag van software over de GRID middleware.
		De kern bestaat uit een installation database en een CLI.
		De CLI zorgt voor de interactie met GRID en in de database worden de verschillende job definities bijgehouden.
		Iedere component van LJSFi maakt gebruik van de database om de configuratie van verschillende jobs te krijgen, hun status op te slaan, ...
		De architectuur is modulair en het is mogelijk om andere GRID middleware te gebruiken door de kern uit te breiden.
		Het systeem bestaat uit verschillende modules die instaan voor het afhandelen van een installatie request.
		*RAI: een web interface waarin gebruikers een aanvraag kunnen indienen. Er wordt een goed veiligheidsprotocol gebruikt waardoor enkel zij met het goed certificaat binnen kunnen.
		*AIR: de installatie wordt getriggered door de informatie die wordt opgeslagen in de DB.
		Van zodra een release wordt getagged als autoinstall, dan zal de AIR module de gevraagd releases installeren/verwijderen.
		Dit gebeurd ongeveer om het uur.
		*InAgent: deze zal de DB om de 10 minuten lezen en vervolgens de installatie processen opstarten. De taken kunnen worden uitgevoerd door verschillende agents.
		Het is ook mogelijk om terug te vallen op een handmatige modus waarin het installatie team de nodige aanpassingen kunnen maken in de web interface.
		Voor de gebruikers is het mogelijk om gebruik te maken van enkele specifieke services, zoals bijvoorbeeld het subscriben voor notificatie mails voor een site.
		Alle acties die worden ondernomen voor het installeren van software, maar ook de acties van het LJSFi, worden in de gaten gehouden door de GriBB.
		GriBB kan gebruikt worden om processen te sluiten die bijvoorbeeld teveel CPU gebruiken, ...
		De installatie van de software gebeurd in enkele stappen:
		-site checks: dit is een pilot job die goed moet worden uitgevoerd voordat de echte installatie kan beginnen.
		-installation task
		-output vallidation: hier zal LJSFi de job output van GRID halen en zal de exit code gebruiken om de DB te updaten.
		
Zoekterm: Software Deployment
	QUIET: A Methodology for Autonomous Software Deployment using Mobile Agents
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=viewOnlineTab&ct=display&fn=search&doc=TN_sciversesciencedirect_elsevierS1084-8045(10)00050-0&indx=5&recIds=TN_sciversesciencedirect_elsevierS1084-8045(10)00050-0&recIdxs=4&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?gathStatTab=true&dscnt=0&mode=Basic&vid=KULeuven_ODISEE&rfnGrp=1&tab=all_content_tab&dstmp=1475326119313&frbg=&rfnGrpCounter=1&frbrVersion=5&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&fctV=articles&srt=rank&fctN=facet_rtype&dum=true&vl(freeText0)=software%20deployment&fromTabHeaderButtonPopout=true
		http://www.sciencedirect.com.kuleuven.ezproxy.kuleuven.be/science/article/pii/S1084804510000500
		
		Het silently installeren van software over een netwerk. (Ik denk dat het is zoals het installeren van software in een klaslokaal waarbij niemand moet zitten)
		Het doel van het onderzoek is het maken van een systeem waarmee silent installations kunnen gebeuren op een netwerk.
		Er wordt gebruik gemaakt van agents (programma's die autonoom kunnen werken en dingen kunnen doen in plaats van de gebruiker).
		Deze agents worden dan gebruikt in het model.
		Er is een controller en die zorgt voor het inladen van de nodige installaties en zal dan alle agents beheren.
		Verder wordt er uitgelegd hoe ze te werk zijn gegaan.
		
		Kan gebruikt worden voor het silent installeren van de drivers te verklaren/onderbouwen?
		
Zoekterm: Software Packaging
	Software packaging approaches - A comparison framework (Boek p. 438)
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=detailsTab&ct=display&fn=search&doc=TN_scopus2-s2.0-80053189994&indx=1&recIds=TN_scopus2-s2.0-80053189994&recIdxs=0&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?frbg=&frbrVersion=&prefetch=true&dscnt=1&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&mode=Basic&vid=KULeuven_ODISEE&srt=rank&tab=all_content_tab&vl(freeText0)=Software%20packaging&dum=true&dstmp=1476533211812&fromTabHeaderButtonPopout=true
		http://download.springer.com.kuleuven.ezproxy.kuleuven.be/static/pdf/484/bok%253A978-3-642-23798-0.pdf?originUrl=http%3A%2F%2Flink.springer.com%2Fbook%2F10.1007%2F978-3-642-23798-0&token2=exp=1476534447~acl=%2Fstatic%2Fpdf%2F484%2Fbok%25253A978-3-642-23798-0.pdf%3ForiginUrl%3Dhttp%253A%252F%252Flink.springer.com%252Fbook%252F10.1007%252F978-3-642-23798-0*~hmac=23428eec5b87ddcd2e0fdb0a2ec4079bd1074bf03b12d47fa9f9f4e3709113e0
		
		Bij OO wordt project verdeelt in verschillende componenten zodat het gemakkelijker te begrijpen is.
		Van zodra het aantal klassen teveel wordt, dan zal die niet meer voldoende zijn om als architectuur te dienen,
		aangezien het dan averechts werkt.
		Packages worden gebruikt om te architectuur te definieren.
		Ze hebben een framework gemaakt met als doel het klassificeren en vergelijken van packages gebasseerd op een set van attributen.
		Vervolgens gaan ze te werk om verschillende packaging aanpakken te vergelijken met elkaar.
		Hierna leggen ze uit waarop zij zich hebben gebasseerd en leggen ze de verschillende packaging strategien uit die ze gaan beoordelen.
		En dan leggen ze hun waarnemingen uit. 
		
		Misschien wel handig om een bepaalde manier van packaging te verklaren/onderbouwen?

	Atlas software packaging
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=viewOnlineTab&ct=display&fn=search&doc=TN_iop10.1088%2f1742-6596%2f396%2f5%2f052063&indx=6&recIds=TN_iop10.1088%2f1742-6596%2f396%2f5%2f052063&recIdxs=5&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?frbg=&frbrVersion=4&gathStatTab=true&dscnt=0&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&mode=Basic&vid=KULeuven_ODISEE&tab=all_content_tab&srt=rank&dum=true&vl(freeText0)=Software%20packaging&dstmp=1476533697088&fromTabHeaderButtonPopout=true
		http://iopscience.iop.org.kuleuven.ezproxy.kuleuven.be/article/10.1088/1742-6596/396/5/052063/pdf
		
		Software is ontworpen om data te analyseren en simuleren van data.
		Hun systeem bestaat ui ongeveer 2000 packages. Zware taak om alles te verspreiden want veel mensen moeten snel aan nieuwe releases kunnen.
		Zij gebruiken PackDist voor het packaging en leggen uit wat de feautres zijn.
		
		Misschien gebruiken voor Packager, uitleggen waarom ik het op zo'n manier opdeel.
		
	Software Deployment, Past, Present and Future
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=viewOnlineTab&ct=display&fn=search&doc=TN_ieee10.1109%2fFOSE.2007.20&indx=1&recIds=TN_ieee10.1109%2fFOSE.2007.20&recIdxs=0&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?frbg=&frbrVersion=2&gathStatTab=true&dscnt=0&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&mode=Basic&vid=KULeuven_ODISEE&tab=all_content_tab&srt=rank&dum=true&vl(freeText0)=Software%20Deployment%2C%20Past%2C%20Present%20and%20Future&dstmp=1476536812473&fromTabHeaderButtonPopout=true
		http://ieeexplore.ieee.org.kuleuven.ezproxy.kuleuven.be/document/4221626/
		
		Sectie 1.1 bespreekt de verschillende termen die gebruikt worden in het artikel.
		Hierna leggen ze ook de lifecycle uit. Dit is ook misschien wel handig.
		Vervolgens worden er verschillende manieren van deployment besproken zoals javabeans, linux package manager,...
		
		
		Misschien wel een bron waarmee ik de gekozen benameningen kan belichten. Haalt virtualisatie aan als mogelijke oplossing!!!!

Zoekterm: datacenter
	The datacenter as a computer an introduction to the design of warehouse-scale machines
		http://limo.libis.be/primo_library/libweb/action/index.html?afterTimeout=F3B2C6192F36F7154ACCE25F7510C111&vid=KULeuven_ODISEE&dscnt=0
		http://www.morganclaypool.com.kuleuven.ezproxy.kuleuven.be/doi/pdf/10.2200/S00193ED1V01Y200905CAC006
		Bezit een hoofdstuk over failure dat eventueel zou kunnen gebruikt worden.
		
Zoekterm: Docker
	Docker
		http://limo.libis.be/primo_library/libweb/action/display.do?tabs=viewOnlineTab&ct=display&fn=search&doc=TN_ieee10.1109%2fMS.2015.62&indx=2&recIds=TN_ieee10.1109%2fMS.2015.62&recIdxs=1&elementId=&renderMode=poppedOut&displayMode=full&http://limo.libis.be:80/primo_library/libweb/action/expand.do?frbg=&frbrVersion=6&gathStatTab=true&dscnt=0&scp.scps=scope%3A%2832LIBIS_ALMA_DS_P%29%2Cscope%3A%28SCOPE_773%29%2Cscope%3A%28KUL%29%2Cprimo_central_multiple_fe&tb=t&mode=Basic&vid=KULeuven_ODISEE&tab=all_content_tab&srt=rank&dum=true&vl(freeText0)=docker&dstmp=1477129247116&fromTabHeaderButtonPopout=true
		http://ieeexplore.ieee.org.kuleuven.ezproxy.kuleuven.be/document/7093032/
		Waarom docker gebruiken en niet gwn VM wordt hierin uitgelegd.